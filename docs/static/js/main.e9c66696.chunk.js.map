{"version":3,"sources":["components/Header.js","components/ChartData.js","components/Tables.js","components/Loading.js","App.js","index.js"],"names":["Header","className","href","ChartData","covidData","ctxRef","useRef","useEffect","canvas","ctx","getContext","Chart","type","data","labels","map","x","Date","toLocaleDateString","datasets","label","nuovi_positivi","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","createChart","current","ref","Tables","range","filter","getTime","reverse","class","scope","el","deceduti","tamponi","Loading","role","App","useState","setCovidData","fetch","then","res","json","dt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAAe,SAASA,IACpB,OACI,sBAAKC,UAAU,wBAAf,UACI,oBAAIA,UAAU,YAAd,6BACA,oBAAGA,UAAU,OAAb,uGAA8G,mBAAGC,KAAK,yCAAR,sBAA9G,iBACA,oBAAID,UAAU,SACd,4CACe,mBAAGC,KAAK,8BAAR,+BADf,qBAEmB,mBAAGA,KAAK,sCAAR,0FAFnB,iBAGe,mBAAGA,KAAK,2BAAR,qBAHf,cAGwE,mBAAGA,KAAK,uBAAR,4B,oBCNrE,SAASC,EAAT,GAAgC,IAAZC,EAAW,EAAXA,UAEzBC,EAASC,iBAAO,MA8CtB,OA5CAC,qBAAU,YAIV,SAAqBC,GACjB,IAAMC,EAAMD,EAAOE,WAAW,MACd,IAAIC,IAAMF,EAAK,CAC3BG,KAAM,OACNC,KAAM,CACFC,OAAQV,EAAUW,KAAI,SAAAC,GAAC,OAAI,IAAIC,KAAKD,EAAEH,MAAMK,mBAAmB,CAAC,MAAO,UACvEC,SAAU,CAAC,CACPC,MAAO,aACPP,KAAMT,EAAUW,KAAI,SAAAC,GAAC,OAAIA,EAAEK,kBAC3BC,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEJC,YAAa,CACT,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEJC,YAAa,KAGrBC,QAAS,CACLC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,SAnCjCC,CAAYzB,EAAO0B,WACrB,CAAC1B,IA2CC,qBAAKJ,UAAU,aAAf,SACI,wBAAQ+B,IAAK3B,MCrDV,SAAS4B,EAAT,GAA6B,IAElCC,EAFiC,EAAX9B,UAEJ+B,QAAO,SAAAnB,GAAC,OAAI,IAAIC,KAAKD,EAAEH,MAAMuB,UAAY,IAAInB,KAAK,cAAcmB,aAAWC,UAEnG,OACI,wBAAOC,MAAM,aAAb,UACI,gCACI,+BACA,oBAAIC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,4BACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,0BAGJ,gCACCL,EAAMnB,KAAI,SAAAyB,GAAE,OACT,+BACI,oBAAID,MAAM,MAAV,SAAiB,IAAItB,KAAKuB,EAAG3B,MAAMK,mBAAmB,CAAC,MAAO,SAC9D,6BAAKsB,EAAGnB,iBACR,6BAAKmB,EAAGC,WACR,6BAAKD,EAAGE,qBCpBb,SAASC,IACpB,OACI,sBAAK1C,UAAU,cAAf,UACI,qBAAKqC,MAAM,iBAAiBM,KAAK,WACjC,uDCsBGC,MApBf,WAAgB,IAAD,EACqBC,mBAAS,MAD9B,mBACN1C,EADM,KACK2C,EADL,KASb,OANAxC,qBAAU,WACRyC,MAAM,gHACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAE,OAAIL,EAAaK,QACzB,IAGA,sBAAKnD,UAAU,MAAf,UACE,cAACD,EAAD,IACCI,EAAW,sBAAKH,UAAU,YAAf,UACV,cAACE,EAAD,CAAWC,UAAWA,IACtB,cAAC6B,EAAD,CAAQ7B,UAAWA,OACZ,cAACuC,EAAD,QCjBfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e9c66696.chunk.js","sourcesContent":["export default function Header(){\n    return(\n        <div className=\"jumbotron text-center\">\n            <h1 className=\"display-4\">Covid-19 Italia</h1>\n            <p className=\"lead\">Strumento online open source per monitorare giorno per giorno il numero dei contagiati di <a href=\"https://it.wikipedia.org/wiki/COVID-19\">COVID-19</a> in Italia.</p>\n            <hr className=\"my-4\" />\n            <p>\n                Web App di <a href=\"http://rosarioterranova.com\">Rosario Terranova</a> |\n                Dati Ufficiali <a href=\"https://github.com/pcm-dpc/COVID-19\">Presidenza del Consiglio dei Ministri - Dipartimento della Protezione Civile</a> |\n                Grafici di <a href=\"https://www.chartjs.org/\">ChartJS</a>, fatta in <a href=\"https://reactjs.org/\">React.js</a>\n            </p>\n        </div>\n    )\n}","import {useRef, useEffect} from \"react\"\nimport Chart from \"chart.js\"\n\nexport default function ChartData({covidData}){\n\n    const ctxRef = useRef(null);\n\n    useEffect(()=>{\n        createChart(ctxRef.current)\n    },[ctxRef])\n\n    function createChart(canvas){\n        const ctx = canvas.getContext('2d');\n        const myChart = new Chart(ctx, {\n            type: 'line',\n            data: {\n                labels: covidData.map(x => new Date(x.data).toLocaleDateString(['ban', 'id'])),\n                datasets: [{\n                    label: 'Contagiati',\n                    data: covidData.map(x => x.nuovi_positivi),\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 159, 64, 0.2)'\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)'\n                    ],\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }]\n                }\n            }\n        });\n    }\n\n    return(\n        <div className=\"chart my-3\">\n            <canvas ref={ctxRef}></canvas>\n        </div>\n    )\n} ","export default function Tables({covidData}){\n\n    const range = covidData.filter(x => new Date(x.data).getTime() > new Date(\"2020-06-01\").getTime()).reverse()\n\n    return(\n        <table class=\"table my-3\">\n            <thead>\n                <tr>\n                <th scope=\"col\">Data</th>\n                <th scope=\"col\">Nuovi Positivi</th>\n                <th scope=\"col\">Deceduti</th>\n                <th scope=\"col\">Tamponi</th>\n                </tr>\n            </thead>\n            <tbody>\n            {range.map(el => (\n                <tr>\n                    <th scope=\"row\">{new Date(el.data).toLocaleDateString(['ban', 'id'])}</th>\n                    <td>{el.nuovi_positivi}</td>\n                    <td>{el.deceduti}</td>\n                    <td>{el.tamponi}</td>\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    )\n}","export default function Loading(){\n    return(\n        <div className=\"text-center\">\n            <div class=\"spinner-border\" role=\"status\"></div>\n            <p>Caricamento dati...</p>\n        </div>\n    )\n}","import {useState, useEffect} from \"react\"\nimport Header from \"./components/Header\"\nimport ChartData from \"./components/ChartData\"\nimport Tables from \"./components/Tables\"\nimport Loading from \"./components/Loading\"\n\nfunction App() {\n  const [covidData, setCovidData] = useState(null)\n\n  useEffect(()=>{\n    fetch(\"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale.json\")\n    .then(res => res.json())\n    .then(dt => setCovidData(dt))\n  },[])\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      {covidData? <div className=\"container\">\n        <ChartData covidData={covidData}/>\n        <Tables covidData={covidData}  />\n      </div> : <Loading />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}