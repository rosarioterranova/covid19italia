{"version":3,"sources":["components/Header.js","components/ChartData.js","components/Tables.js","components/Loading.js","App.js","index.js"],"names":["Header","className","href","ChartData","covidData","ctxRef","useRef","useEffect","canvas","ctx","getContext","Chart","type","data","labels","map","x","Date","toLocaleDateString","datasets","label","nuovi_positivi","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","createChart","current","ref","Tables","range","filter","getTime","reverse","scope","el","index","deceduti","tamponi","Loading","role","App","useState","setCovidData","fetch","then","res","json","dt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAAe,SAASA,IACpB,OACI,sBAAKC,UAAU,wBAAf,UACI,oBAAIA,UAAU,YAAd,6BACA,oBAAGA,UAAU,OAAb,uGAA8G,mBAAGC,KAAK,yCAAR,sBAA9G,iBACA,oBAAID,UAAU,SACd,4CACe,mBAAGC,KAAK,8BAAR,+BADf,qBAEmB,mBAAGA,KAAK,sCAAR,0FAFnB,iBAGe,mBAAGA,KAAK,2BAAR,qBAHf,cAGwE,mBAAGA,KAAK,uBAAR,4B,oBCNrE,SAASC,EAAT,GAAgC,IAAZC,EAAW,EAAXA,UAEzBC,EAASC,iBAAO,MA8CtB,OA5CAC,qBAAU,YAIV,SAAqBC,GACjB,IAAMC,EAAMD,EAAOE,WAAW,MACd,IAAIC,IAAMF,EAAK,CAC3BG,KAAM,OACNC,KAAM,CACFC,OAAQV,EAAUW,KAAI,SAAAC,GAAC,OAAI,IAAIC,KAAKD,EAAEH,MAAMK,mBAAmB,CAAC,MAAO,UACvEC,SAAU,CAAC,CACPC,MAAO,aACPP,KAAMT,EAAUW,KAAI,SAAAC,GAAC,OAAIA,EAAEK,kBAC3BC,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEJC,YAAa,CACT,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEJC,YAAa,KAGrBC,QAAS,CACLC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,SAnCjCC,CAAYzB,EAAO0B,WACrB,CAAC1B,IA2CC,qBAAKJ,UAAU,aAAf,SACI,wBAAQ+B,IAAK3B,MCrDV,SAAS4B,EAAT,GAA6B,IAElCC,EAFiC,EAAX9B,UAEJ+B,QAAO,SAAAnB,GAAC,OAAI,IAAIC,KAAKD,EAAEH,MAAMuB,UAAY,IAAInB,KAAK,cAAcmB,aAAWC,UAEnG,OACI,wBAAOpC,UAAU,aAAjB,UACI,gCACI,+BACA,oBAAIqC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,4BACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,0BAGJ,gCACCJ,EAAMnB,KAAI,SAACwB,EAAGC,GAAJ,OACP,+BACI,oBAAIF,MAAM,MAAV,SAAiB,IAAIrB,KAAKsB,EAAG1B,MAAMK,mBAAmB,CAAC,MAAO,SAC9D,6BAAKqB,EAAGlB,iBACR,6BAAKkB,EAAGE,WACR,6BAAKF,EAAGG,YAJHF,WChBV,SAASG,IACpB,OACI,sBAAK1C,UAAU,cAAf,UACI,qBAAKA,UAAU,iBAAiB2C,KAAK,WACrC,uDCsBGC,MApBf,WAAgB,IAAD,EACqBC,mBAAS,MAD9B,mBACN1C,EADM,KACK2C,EADL,KASb,OANAxC,qBAAU,WACRyC,MAAM,gHACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAE,OAAIL,EAAaK,QACzB,IAGA,sBAAKnD,UAAU,MAAf,UACE,cAACD,EAAD,IACCI,EAAW,sBAAKH,UAAU,YAAf,UACV,cAACE,EAAD,CAAWC,UAAWA,IACtB,cAAC6B,EAAD,CAAQ7B,UAAWA,OACZ,cAACuC,EAAD,QCjBfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7066ec7b.chunk.js","sourcesContent":["export default function Header(){\r\n    return(\r\n        <div className=\"jumbotron text-center\">\r\n            <h1 className=\"display-4\">Covid-19 Italia</h1>\r\n            <p className=\"lead\">Strumento online open source per monitorare giorno per giorno il numero dei contagiati di <a href=\"https://it.wikipedia.org/wiki/COVID-19\">COVID-19</a> in Italia.</p>\r\n            <hr className=\"my-4\" />\r\n            <p>\r\n                Web App di <a href=\"http://rosarioterranova.com\">Rosario Terranova</a> |\r\n                Dati Ufficiali <a href=\"https://github.com/pcm-dpc/COVID-19\">Presidenza del Consiglio dei Ministri - Dipartimento della Protezione Civile</a> |\r\n                Grafici di <a href=\"https://www.chartjs.org/\">ChartJS</a>, fatta in <a href=\"https://reactjs.org/\">React.js</a>\r\n            </p>\r\n        </div>\r\n    )\r\n}","import {useRef, useEffect} from \"react\"\r\nimport Chart from \"chart.js\"\r\n\r\nexport default function ChartData({covidData}){\r\n\r\n    const ctxRef = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        createChart(ctxRef.current)\r\n    },[ctxRef])\r\n\r\n    function createChart(canvas){\r\n        const ctx = canvas.getContext('2d');\r\n        const myChart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: covidData.map(x => new Date(x.data).toLocaleDateString(['ban', 'id'])),\r\n                datasets: [{\r\n                    label: 'Contagiati',\r\n                    data: covidData.map(x => x.nuovi_positivi),\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"chart my-3\">\r\n            <canvas ref={ctxRef}></canvas>\r\n        </div>\r\n    )\r\n} ","export default function Tables({covidData}){\r\n\r\n    const range = covidData.filter(x => new Date(x.data).getTime() > new Date(\"2020-06-01\").getTime()).reverse()\r\n\r\n    return(\r\n        <table className=\"table my-3\">\r\n            <thead>\r\n                <tr>\r\n                <th scope=\"col\">Data</th>\r\n                <th scope=\"col\">Nuovi Positivi</th>\r\n                <th scope=\"col\">Deceduti</th>\r\n                <th scope=\"col\">Tamponi</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {range.map((el,index) => (\r\n                <tr key={index}>\r\n                    <th scope=\"row\">{new Date(el.data).toLocaleDateString(['ban', 'id'])}</th>\r\n                    <td>{el.nuovi_positivi}</td>\r\n                    <td>{el.deceduti}</td>\r\n                    <td>{el.tamponi}</td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","export default function Loading(){\r\n    return(\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border\" role=\"status\"></div>\r\n            <p>Caricamento dati...</p>\r\n        </div>\r\n    )\r\n}","import {useState, useEffect} from \"react\"\r\nimport Header from \"./components/Header\"\r\nimport ChartData from \"./components/ChartData\"\r\nimport Tables from \"./components/Tables\"\r\nimport Loading from \"./components/Loading\"\r\n\r\nfunction App() {\r\n  const [covidData, setCovidData] = useState(null)\r\n\r\n  useEffect(()=>{\r\n    fetch(\"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale.json\")\r\n    .then(res => res.json())\r\n    .then(dt => setCovidData(dt))\r\n  },[])\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      {covidData? <div className=\"container\">\r\n        <ChartData covidData={covidData}/>\r\n        <Tables covidData={covidData}  />\r\n      </div> : <Loading />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}